package mavlink

import genetic.genetic.system.Pair
import mavlink.net.MavClientReceive
import mavlink.net.MavClientSend
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.context.annotation.Scope
import org.springframework.core.env.Environment
import org.springframework.stereotype.Component

import javax.annotation.PostConstruct

@Component
@Scope("prototype")
class MavTask {

    MavClientSend mavClientSend

    @PostConstruct
    void init() {
      //  def file = new File(environment.getProperty('mavlink.task.file.name'))/*
    /*    file.withReader {r ->
            def lines = r.readLines()
            lines.each { line ->
                def bytes = line.getBytes()
                mavClient.byteMsgs.add(ByteBuffer.wrap(bytes))
            }
        }
        */
      /*  mavClient.msgs.add(new MavLink.MSG_REQUEST_DATA_STREAM(
                MavLink.MAV_SYSTEM_ID,
                MavLink.MAV_COMPONENT_ID,
                20,
                MavLink.MAV_SYSTEM_ID,
                MavLink.MAV_COMPONENT_ID,
                0,
                1

        ))
        mavClient.msgs.add(new MavLink.MSG_REQUEST_DATA_STREAM(
                MavLink.MAV_SYSTEM_ID,
                MavLink.MAV_COMPONENT_ID,
                20,
                MavLink.MAV_SYSTEM_ID,
                MavLink.MAV_COMPONENT_ID,
                0,
                1
        ))*/

     //   println MavLink.Message.decodeMessage( (byte[])[0xfe ,0x2c ,0xea ,0x01 ,0x01 ,0xa4 ,0x80 ,0xe1 ,0xd2 ,0x3b ,0xc6 ,0x78 ,0x7e ,0xbc ,0x7a ,0xe9 ,0xf7 ,0xbd ,0x6e ,0x34 ,0x1c ,0xbe ,0x6b ,0x49 ,0x98 ,0xbd ,0xe1 ,0x17 ,0x1d ,0xc1 ,0x35 ,0x10 ,0xfb ,0xba ,0x4b ,0x71 ,0x20 ,0x3a ,0x66 ,0x1c ,0x99 ,0xbb ,0x58 ,0x00 ,0x00 ,0x00 ,0xff ,0xff ,0xff ,0xff ,0x33 ,0xf5])

        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x05 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x02 ,0x01 ,0x26 ,0x94]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x06 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x02 ,0x01 ,0x95 ,0x6A]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x07 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x06 ,0x01 ,0x65 ,0x5C]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x08 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x06 ,0x01 ,0x29 ,0x40]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x09 ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0A ,0x01 ,0x6D ,0xDF]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0A ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0A ,0x01 ,0xDE ,0x21]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0B ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0B ,0x01 ,0x93 ,0x2E]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0C ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0B ,0x01 ,0x75 ,0x8E]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0D ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x0C ,0x01 ,0x97 ,0x38]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0E ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x0C ,0x01 ,0x24 ,0xC6]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0F ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x01 ,0x01 ,0xCA ,0x6C]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x10 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x01 ,0x01 ,0xC3 ,0x01]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x11 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x03 ,0x01 ,0xEA ,0xE1]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x12 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x03 ,0x01 ,0x59 ,0x1F]),6020L))

        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x33 ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0xD3 ,0x86 ]),20L))// ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x34 ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x35 ,0x26]),1020L)) // ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x21 ,0x37 ,0xFF ,0xBE ,0x4C ,0x00 ,0x00 ,0x80 ,0x3F ,0x00 ,0x98 ,0xA5 ,0x46 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x90 ,0x01 ,0x01 ,0x01 ,0x00 ,0xCF ,0x2C]),20L))// ,Long
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x3C ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x9F ,0x9A]),20L)) // ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x3D ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x0E ,0xCF]),20L)) // ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x21 ,0x3E ,0xFF ,0xBE ,0x4C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x41 ,0x16 ,0x00 ,0x01 ,0x01 ,0x00 ,0x68 ,0x67]),7020L))// ,Long
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x25 ,0x61 ,0xFF ,0xBE ,0x27 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x20 ,0x3A ,0x00 ,0xF0 ,0x25 ,0x3A ,0x00 ,0x00 ,0x60 ,0x41 ,0x00 ,0x00 ,0x10 ,0x00 ,0x01 ,0x01 ,0x03 ,0x02 ,0x01 ,0xED ,0xF5]),20L)) // ,Mission ,item


//FE 06 40 FF BE 42 02 00 01 01 02 01 E7 52
//FE 06 41 FF BE 42 02 00 01 01 02 01 76 07
//FE 06 42 FF BE 42 02 00 01 01 06 01 A4 9A
//FE 06 43 FF BE 42 02 00 01 01 06 01 35 CF
//FE 06 44 FF BE 42 06 00 01 01 0A 01 06 A5
//FE 06 45 FF BE 42 06 00 01 01 0A 01 97 F0
//FE 06 46 FF BE 42 06 00 01 01 0B 01 F8 54
//FE 06 47 FF BE 42 06 00 01 01 0B 01 69 01
//FE 06 48 FF BE 42 02 00 01 01 0C 01 56 FE
//FE 06 49 FF BE 42 02 00 01 01 0C 01 C7 AB
//FE 06 4A FF BE 42 02 00 01 01 01 01 0B AA
//FE 06 4B FF BE 42 02 00 01 01 01 01 9A FF
//FE 06 4C FF BE 42 02 00 01 01 03 01 C4 EA
//FE 06 4D FF BE 42 02 00 01 01 03 01 55 BF





    }

}
