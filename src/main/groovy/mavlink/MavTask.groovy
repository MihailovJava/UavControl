package mavlink

import genetic.genetic.system.Pair
import mavlink.net.MavClientReceive
import mavlink.net.MavClientSend
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.context.annotation.Scope
import org.springframework.core.env.Environment
import org.springframework.stereotype.Component

import javax.annotation.PostConstruct


class MavTask {

    MavClientSend mavClientSend

    public init() {
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x05 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x02 ,0x01 ,0x26 ,0x94]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x06 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x02 ,0x01 ,0x95 ,0x6A]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x07 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x06 ,0x01 ,0x65 ,0x5C]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x08 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x06 ,0x01 ,0x29 ,0x40]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x09 ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0A ,0x01 ,0x6D ,0xDF]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0A ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0A ,0x01 ,0xDE ,0x21]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0B ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0B ,0x01 ,0x93 ,0x2E]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0C ,0xFF ,0xBE ,0x42 ,0x06 ,0x00 ,0x01 ,0x01 ,0x0B ,0x01 ,0x75 ,0x8E]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0D ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x0C ,0x01 ,0x97 ,0x38]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0E ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x0C ,0x01 ,0x24 ,0xC6]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x0F ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x01 ,0x01 ,0xCA ,0x6C]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x10 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x01 ,0x01 ,0xC3 ,0x01]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x11 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x03 ,0x01 ,0xEA ,0xE1]),20L))
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x12 ,0xFF ,0xBE ,0x42 ,0x02 ,0x00 ,0x01 ,0x01 ,0x03 ,0x01 ,0x59 ,0x1F]),20020L))

        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x33 ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0xD3 ,0x86 ]),20L))// ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x34 ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x35 ,0x26]),5020L)) // ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x21 ,0x37 ,0xFF ,0xBE ,0x4C ,0x00 ,0x00 ,0x80 ,0x3F ,0x00 ,0x98 ,0xA5 ,0x46 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x90 ,0x01 ,0x01 ,0x01 ,0x00 ,0xCF ,0x2C]),10L))// ,Long
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x3C ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x9F ,0x9A]),10L)) // ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x06 ,0x3D ,0xFF ,0xBE ,0x0B ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x0E ,0xCF]),2020L)) // ,SET ,MODE
        mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x21 ,0x3E ,0xFF ,0xBE ,0x4C ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x60 ,0x41 ,0x16 ,0x00 ,0x01 ,0x01 ,0x00 ,0x68 ,0x67]),10020L))// ,Long
     //   mavClientSend.msgs.add(new Pair( MavLink.Message.decodeMessage((byte[])[0xFE ,0x25 ,0x61 ,0xFF ,0xBE ,0x27 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x50 ,0x20 ,0x3A ,0x00 ,0xF0 ,0x25 ,0x3A ,0x00 ,0x00 ,0x60 ,0x41 ,0x00 ,0x00 ,0x10 ,0x00 ,0x01 ,0x01 ,0x03 ,0x02 ,0x01 ,0xED ,0xF5]),10020L)) // ,Mission ,item

    }

    public void addTask(MavLink.Message task,long delay){
        mavClientSend.msgs.add(new Pair<MavLink.Message, Long>(task,delay))
    }

}
